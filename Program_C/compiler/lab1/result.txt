<KEYWORD, import>
<IDENTIFIER, urllib>
<SYMBOL, .>
<IDENTIFIER, request>
<KEYWORD, import>
<IDENTIFIER, re>
<KEYWORD, import>
<IDENTIFIER, os>
<KEYWORD, def>
<IDENTIFIER, getHtml>
<SYMBOL, (>
<IDENTIFIER, url>
<SYMBOL, )>
<SYMBOL, :>
<IDENTIFIER, page>
<SYMBOL, =>
<IDENTIFIER, urllib>
<SYMBOL, .>
<IDENTIFIER, request>
<SYMBOL, .>
<IDENTIFIER, urlopen>
<SYMBOL, (>
<IDENTIFIER, url>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, html>
<SYMBOL, =>
<IDENTIFIER, page>
<SYMBOL, .>
<IDENTIFIER, read>
<SYMBOL, (>
<SYMBOL, )>
<SYMBOL, ;>
<KEYWORD, return>
<IDENTIFIER, html>
<SYMBOL, ;>
<KEYWORD, def>
<IDENTIFIER, getImg>
<SYMBOL, (>
<IDENTIFIER, html>
<SYMBOL, )>
<SYMBOL, :>
<IDENTIFIER, imglist>
<SYMBOL, =>
<IDENTIFIER, re>
<SYMBOL, .>
<IDENTIFIER, findall>
<SYMBOL, (>
<STRING, 'img src="(http.*?)"'>
<SYMBOL, ,>
<IDENTIFIER, html>
<SYMBOL, )>
<KEYWORD, return>
<IDENTIFIER, imglist>
<IDENTIFIER, html>
<SYMBOL, =>
<IDENTIFIER, getHtml>
<SYMBOL, (>
<STRING, "https://www.zhihu.com/question/34378366">
<SYMBOL, )>
<SYMBOL, .>
<IDENTIFIER, decode>
<SYMBOL, (>
<STRING, "utf-8">
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, imagesUrl>
<SYMBOL, =>
<IDENTIFIER, getImg>
<SYMBOL, (>
<IDENTIFIER, html>
<SYMBOL, )>
<SYMBOL, ;>
<KEYWORD, if>
<IDENTIFIER, os>
<SYMBOL, .>
<IDENTIFIER, path>
<SYMBOL, .>
<IDENTIFIER, exists>
<SYMBOL, (>
<STRING, "D:/imags">
<SYMBOL, )>
<SYMBOL, ==>
<IDENTIFIER, False>
<SYMBOL, :>
<IDENTIFIER, os>
<SYMBOL, .>
<IDENTIFIER, mkdir>
<SYMBOL, (>
<STRING, "D:/imags">
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, count>
<SYMBOL, =>
<INTEGER, 0>
<SYMBOL, ;>
<KEYWORD, for>
<IDENTIFIER, url>
<KEYWORD, in>
<IDENTIFIER, imagesUrl>
<SYMBOL, :>
<KEYWORD, print>
<SYMBOL, (>
<IDENTIFIER, url>
<SYMBOL, )>
<KEYWORD, if>
<SYMBOL, (>
<IDENTIFIER, url>
<SYMBOL, .>
<IDENTIFIER, find>
<SYMBOL, (>
<STRING, '.'>
<SYMBOL, )>
<SYMBOL, !=>
<INTEGER, -1>
<SYMBOL, )>
<SYMBOL, :>
<IDENTIFIER, name>
<SYMBOL, =>
<IDENTIFIER, url>
<SYMBOL, [>
<IDENTIFIER, url>
<SYMBOL, .>
<IDENTIFIER, find>
<SYMBOL, (>
<STRING, '.'>
<SYMBOL, ,>
<IDENTIFIER, len>
<SYMBOL, (>
<IDENTIFIER, url>
<SYMBOL, )>
<SYMBOL, ->
<INTEGER, 5>
<SYMBOL, )>
<SYMBOL, :>
<SYMBOL, ]>
<SYMBOL, ;>
<IDENTIFIER, bytes>
<SYMBOL, =>
<IDENTIFIER, urllib>
<SYMBOL, .>
<IDENTIFIER, request>
<SYMBOL, .>
<IDENTIFIER, urlopen>
<SYMBOL, (>
<IDENTIFIER, url>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, f>
<SYMBOL, =>
<IDENTIFIER, open>
<SYMBOL, (>
<STRING, "D:/imags/">
<SYMBOL, +>
<IDENTIFIER, str>
<SYMBOL, (>
<IDENTIFIER, count>
<SYMBOL, )>
<SYMBOL, +>
<IDENTIFIER, name>
<SYMBOL, ,>
<STRING, 'wb'>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, f>
<SYMBOL, .>
<IDENTIFIER, write>
<SYMBOL, (>
<IDENTIFIER, bytes>
<SYMBOL, .>
<IDENTIFIER, read>
<SYMBOL, (>
<SYMBOL, )>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, f>
<SYMBOL, .>
<IDENTIFIER, flush>
<SYMBOL, (>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, f>
<SYMBOL, .>
<IDENTIFIER, close>
<SYMBOL, (>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, count>
<SYMBOL, +=>
<INTEGER, 1>
<SYMBOL, ;>
<KEYWORD, def>
<IDENTIFIER, sqrt_binary>
<SYMBOL, (>
<IDENTIFIER, num>
<SYMBOL, )>
<SYMBOL, :>
<IDENTIFIER, x>
<SYMBOL, =>
<IDENTIFIER, sqrt>
<SYMBOL, (>
<IDENTIFIER, num>
<SYMBOL, )>
<IDENTIFIER, y>
<SYMBOL, =>
<IDENTIFIER, num>
<SYMBOL, />
<FLOAT, 2.0>
<IDENTIFIER, low>
<SYMBOL, =>
<FLOAT, -0.0>
<IDENTIFIER, up>
<SYMBOL, =>
<IDENTIFIER, num>
<SYMBOL, *>
<FLOAT, 1.0>
<IDENTIFIER, count>
<SYMBOL, =>
<INTEGER, 1>
<KEYWORD, while>
<IDENTIFIER, abs>
<SYMBOL, (>
<IDENTIFIER, y>
<SYMBOL, ->
<IDENTIFIER, x>
<SYMBOL, )>
<SYMBOL, >>
<FLOAT, 0.00000001>
<SYMBOL, :>
<KEYWORD, print>
<IDENTIFIER, count>
<SYMBOL, ,>
<IDENTIFIER, y>
<IDENTIFIER, count>
<SYMBOL, +=>
<INTEGER, 1>
<KEYWORD, if>
<SYMBOL, (>
<IDENTIFIER, y>
<SYMBOL, *>
<IDENTIFIER, y>
<SYMBOL, >>
<IDENTIFIER, num>
<SYMBOL, )>
<SYMBOL, :>
<IDENTIFIER, up>
<SYMBOL, =>
<IDENTIFIER, y>
<IDENTIFIER, y>
<SYMBOL, =>
<IDENTIFIER, low>
<SYMBOL, +>
<SYMBOL, (>
<IDENTIFIER, y>
<SYMBOL, ->
<IDENTIFIER, low>
<SYMBOL, )>
<SYMBOL, />
<INTEGER, 2>
<KEYWORD, else>
<SYMBOL, :>
<IDENTIFIER, low>
<SYMBOL, =>
<IDENTIFIER, y>
<IDENTIFIER, y>
<SYMBOL, =>
<IDENTIFIER, up>
<SYMBOL, ->
<SYMBOL, (>
<IDENTIFIER, up>
<SYMBOL, ->
<IDENTIFIER, y>
<SYMBOL, )>
<SYMBOL, />
<INTEGER, 2>
<KEYWORD, return>
<IDENTIFIER, y>
